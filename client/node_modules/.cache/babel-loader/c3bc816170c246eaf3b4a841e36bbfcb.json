{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\.vscode\\\\musicplayer\\\\client\\\\src\\\\dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport UseAuth from \"./UseAuth\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport Player from \"./player\";\nimport Search from \"./search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"0a242ea0a6b849f687e226f91800d1c1\"\n});\nexport default function Dashboard(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  //const [youtubeSreach, setYoutubeSreach] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const accessToken = UseAuth(code);\n  let youtubeSearchData;\n\n  function youtubeSearch(keyword) {\n    console.log(keyword);\n    console.log(Search(keyword));\n  } //if(youtubeSearch) setYoutubeSreach(youtubeSearchData)\n\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return; //search query\n    //when searching, dont send request, only do it after searching\n\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return; //go to the result, get artist, name, uri and the album uri\n\n      setSearchResults(res.body.tracks.items.map(track => {\n        //find smallest album image\n        const smallestImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestImage.url\n        };\n      }));\n    }); //when there is a request in the useEffect period but there already requested, cancel it\n\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"search Songs/ Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        youtubeSearch: youtubeSearch\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"KEdNyiB+dvOPQys8cyq38rpWZBQ=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","UseAuth","Container","Form","SpotifyWebApi","TrackSearchResult","Player","Search","spotifyApi","clientId","Dashboard","code","search","setSearch","searchResults","setSearchResults","accessToken","youtubeSearchData","youtubeSearch","keyword","console","log","setAccessToken","cancel","searchTracks","then","res","body","tracks","items","map","track","smallestImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","e","target","value","overflowY"],"sources":["D:/OneDrive/.vscode/musicplayer/client/src/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport UseAuth from \"./UseAuth\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport TrackSearchResult from \"./TrackSearchResult\";\r\nimport Player from \"./player\"\r\nimport Search from \"./search\"\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: \"0a242ea0a6b849f687e226f91800d1c1\",\r\n});\r\n\r\nexport default function Dashboard({ code }) {\r\n  //const [youtubeSreach, setYoutubeSreach] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const accessToken = UseAuth(code);\r\n  let youtubeSearchData; \r\n  \r\n  function youtubeSearch(keyword) {\r\n    console.log(keyword)\r\n    console.log(Search(keyword))\r\n  }\r\n  //if(youtubeSearch) setYoutubeSreach(youtubeSearchData)\r\n  \r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.setAccessToken(accessToken);\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (!search) return setSearchResults([]);\r\n    if (!accessToken) return;\r\n    //search query\r\n    //when searching, dont send request, only do it after searching\r\n    let cancel = false;\r\n\r\n    spotifyApi.searchTracks(search).then((res) => {\r\n      if (cancel) return;\r\n      //go to the result, get artist, name, uri and the album uri\r\n      setSearchResults(\r\n        res.body.tracks.items.map((track) => {\r\n          //find smallest album image\r\n          const smallestImage = track.album.images.reduce((smallest, image) => {\r\n            if (image.height < smallest.height) return image;\r\n            return smallest;\r\n          }, track.album.images[0]);\r\n\r\n          return {\r\n            artist: track.artists[0].name,\r\n            title: track.name,\r\n            uri: track.uri,\r\n            albumUrl: smallestImage.url,\r\n          };\r\n        })\r\n      );\r\n    });\r\n    //when there is a request in the useEffect period but there already requested, cancel it\r\n    return () => (cancel = true);\r\n  }, [search, accessToken]);\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\r\n      <Form.Control\r\n        type=\"search\"\r\n        placeholder=\"search Songs/ Artists\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n        {searchResults.map((track) => (\r\n          <TrackSearchResult track={track} key={track.uri} youtubeSearch={youtubeSearch}/>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}